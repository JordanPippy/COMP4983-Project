[{"/usr/local/ampps/www/finalproject/testprojectweb/src/App.js":"1","/usr/local/ampps/www/finalproject/testprojectweb/src/reportWebVitals.js":"2","/usr/local/ampps/www/finalproject/testprojectweb/src/index.js":"3"},{"size":15790,"mtime":1606756584375,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1604692203884,"results":"6","hashOfConfig":"5"},{"size":549,"mtime":1604946328891,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"fcfwq9",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/local/ampps/www/finalproject/testprojectweb/src/App.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport { Button } from 'reactstrap';\nimport { Container, Row, Col, Modal, ModalTitle, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\n\nclass IconModal extends React.Component {\n    constructor(props) {\n        super(props);\n        console.warn(\"modal\");\n        this.state = {\n            image: this.props.image,\n            name: this.props.name,\n            open: this.props.open,\n            title: '',\n            p: null,\n            q: null,\n            w: null,\n            e: null,\n            r: null,\n            stats: null,\n            shouldClose: false,\n            fetched: false,\n        };\n    }\n\n    getTitle() {\n        console.warn(\"db req name: \" + this.state.name);\n        fetch('http://192.168.0.12:3000/Title/' + this.state.name)\n          .then(response => response.json())\n          .then(res => {this.setState({\n              title: res[0].title,\n          })});\n    }\n\n    getAbilities() {\n        console.warn(\"db req abilities: \" + this.state.name);\n        fetch('http://192.168.0.12:3000/Ability/' + this.state.name)\n          .then(response => response.json())\n          .then(res => {this.setState({\n              p: res[1],\n              q: res[2],\n              w: res[4],\n              e: res[0],\n              r: res[3],\n          })});\n    }\n\n    getStats() {\n        console.warn(\"db req stats: \" + this.state.name);\n        fetch('http://192.168.0.12:3000/Stats/' + this.state.name)\n          .then(response => response.json())\n          .then(res => {this.setState({\n              stats: res[0],\n          })});\n    }\n\n\n    render() {\n        this.state.image = this.props.image;\n        this.state.name = this.props.name;\n        this.state.open = this.props.open;\n\n        if (this.state.shouldClose)\n        {\n            this.state.open = false;\n            this.state.shouldClose = false;\n            this.state.fetched = false;\n\n            this.state.title = '';\n            this.state.p = null;\n            this.state.q = null;\n            this.state.w = null;\n            this.state.e = null;\n            this.state.r = null;\n            this.state.stats = null;\n            this.props.handleModalChange();\n        }\n\n        if (this.state.open)\n        {\n            console.warn(\"STATE IS OPEN\");\n            if (this.state.title != '' && this.state.q != null && this.state.stats != null)\n            {\n                console.warn(\"SHOULD BE RENDERING\");\n                return (\n                    <>\n                    <Modal contentClassName=\"customModal\" dialogClassName=\"customModal\" scrollable={true} isOpen={this.state.open} fade=\"false\"  toggle={() => this.setState({shouldClose: true})} onCloseModal={() => this.setState({shouldClose: true})}>\n                    <ModalHeader className=\"champModal champModalHeader\" toggle={() => this.setState({shouldClose: true})}>{this.state.name}<br/>{this.state.title}</ModalHeader>\n                        <ModalBody className=\"champModal champModalBody\">\n                            <table>\n                                <td>\n                                    <img src={this.state.image}></img>\n                                </td>\n                                <td>\n                                    <tr>\n                                        <th>HP</th>\n                                        <th>HPR</th>\n                                        <th>MP</th>\n                                        <th>MPR</th>\n                                        <th>MS</th>\n                                        <th>AD</th>\n                                        <th>AS</th>\n                                        <th>RNG</th>\n                                        <th>AR</th>\n                                        <th>MR</th>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <p>{this.state.stats.HP}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.HPR}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.MP}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.MPR}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.MS}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.AD}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.attackSpeed}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.RNG}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.AR}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.MR}</p>\n                                        </td>\n                                    </tr>\n                                </td>\n                            </table>\n\n\n                            <br/><br/>\n                            <table>\n                                <tr>\n                                    <td>\n                                        <h1>Passive</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.p.abilityFile}></img>\n                                        <p>{this.state.p.ability}</p>\n                                        <p>{this.state.p.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.p.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.p.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h1>Q</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.q.abilityFile}></img>\n                                        <p>{this.state.q.ability}</p>\n                                        <p>{this.state.q.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.q.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.q.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h1>W</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.w.abilityFile}></img>\n                                        <p>{this.state.w.ability}</p>\n                                        <p>{this.state.w.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.w.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.w.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h1>E</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.e.abilityFile}></img>\n                                        <p>{this.state.e.ability}</p>\n                                        <p>{this.state.e.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.e.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.e.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h1>R</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.r.abilityFile}></img>\n                                        <p>{this.state.r.ability}</p>\n                                        <p>{this.state.r.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.r.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.r.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                            </table>\n                        </ModalBody>\n                    <ModalFooter className=\"champModal champModalFooter\">\n\n                        <Button color=\"success\" onClick={() => this.setState({shouldClose: true})}>Close</Button>\n                    </ModalFooter>\n                    </Modal>\n                    </>\n                );\n            }\n            else\n            {\n                console.warn(\"something was null, fetched = \" + this.state.fetched);\n                if (! this.state.fetched)\n                {\n                    this.state.fetched = true;\n                    if (this.state.title == '')\n                        this.getTitle();\n                    if (this.state.q == null)\n                        this.getAbilities();\n                    if (this.state.stats == null)\n                        this.getStats();\n                }\n                return (\n                    null\n                );\n            }\n        }\n        else\n        {\n            this.state.title = '';\n            return (\n                null\n            );\n        }\n    }\n}\n\n\nclass HomepageHandler extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let files = this.props.files;\n        let index = 0;\n        let length = this.props.files.length;\n        this.state = {\n            files: files,\n            modalFile: null,\n            modalName: null,\n            showModal: false,\n            length: length,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleModalChange = this.handleModalChange.bind(this);\n    }\n\n    handleModalChange() {\n        this.setState({showModal: false});\n    }\n\n    handleClick(file) {\n        this.setState({\n            modalFile: file,\n            modalName: file.substring(0, file.length - 6),\n            showModal: true,\n        });\n    }\n\n    renderImage(file) {\n        return (\n            <img src={file} className=\"homepageIcon\" onClick={() => this.handleClick(file)}></img>\n        );\n    }\n\n\n    render() {\n        const items = [];\n        var tempItems = [];\n        var i;\n        for (i = 0; i < this.state.length; i++)\n        {\n            let name1 = this.props.search;\n            let name2 = this.state.files[i].fileName.substring(0, this.state.files[i].fileName.length - 6);\n            if (name2.indexOf(name1) >= 0) {\n                tempItems.push(\n                    <Col><center><h2>{this.state.files[i].fileName.substring(0, this.state.files[i].fileName.length - 6)}</h2>{this.renderImage(this.state.files[i].fileName)}</center></Col>\n                );\n            }\n            /*\n            if (((i + 1) % 6 == 0 || i == this.state.length - 1) && i != 0)\n            {\n                items.push(<Row xs={6}>{tempItems}</Row>);\n                tempItems = [];\n            }\n            */\n        }\n        items.push(<Row xs={3} md={6}>{tempItems}</Row>);\n\n        return (\n            <div>\n                <div>\n                    <IconModal image={this.state.modalFile}\n                               name={this.state.modalName}\n                               open={this.state.showModal}\n                               handleModalChange={this.handleModalChange}\n                    />\n                </div>\n\n                <div>\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass Home extends React.Component {\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            files: [],\n            index: 0,\n            search: '',\n        };\n    }\n\n    componentDidMount() {\n        console.warn(\"mount?\")\n        fetch('http://192.168.0.12:3000/fileNames')\n          .then(response => response.json())\n          .then(res => {\n              this.setState({files: res});\n          });\n    }\n\n    searchSpace(event) {\n        let keyword = event.target.value;\n        this.setState({search: keyword});\n    }\n\n    render() {\n        if (!(this.state.files.length > 0))\n            return null;\n\n        return (\n            <div>\n                <Container className=\"themed-container champ\" fluid={true}>\n                <div>\n                <center>\n                <input type=\"text\" placeholder=\"Enter item to be searched\" value={this.state.search} onChange={(e)=>this.searchSpace(e)} />\n                </center>\n                </div>\n                <div>\n                    <HomepageHandler files={this.state.files}\n                                     search={this.state.search}\n                    />\n                </div>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","/usr/local/ampps/www/finalproject/testprojectweb/src/reportWebVitals.js",[],"/usr/local/ampps/www/finalproject/testprojectweb/src/index.js",[],{"ruleId":"42","severity":1,"message":"43","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":16},{"ruleId":"42","severity":1,"message":"46","line":5,"column":38,"nodeType":"44","messageId":"45","endLine":5,"endColumn":48},{"ruleId":"47","severity":1,"message":"48","line":60,"column":9,"nodeType":"49","endLine":60,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":61,"column":9,"nodeType":"49","endLine":61,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":62,"column":9,"nodeType":"49","endLine":62,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":66,"column":13,"nodeType":"49","endLine":66,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":67,"column":13,"nodeType":"49","endLine":67,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":68,"column":13,"nodeType":"49","endLine":68,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":70,"column":13,"nodeType":"49","endLine":70,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":71,"column":13,"nodeType":"49","endLine":71,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":72,"column":13,"nodeType":"49","endLine":72,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":73,"column":13,"nodeType":"49","endLine":73,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":74,"column":13,"nodeType":"49","endLine":74,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":75,"column":13,"nodeType":"49","endLine":75,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":76,"column":13,"nodeType":"49","endLine":76,"endColumn":23},{"ruleId":"50","severity":1,"message":"51","line":83,"column":34,"nodeType":"52","messageId":"53","endLine":83,"endColumn":36},{"ruleId":"54","severity":1,"message":"55","line":93,"column":37,"nodeType":"56","endLine":93,"endColumn":65},{"ruleId":"54","severity":1,"message":"55","line":151,"column":41,"nodeType":"56","endLine":151,"endColumn":77},{"ruleId":"54","severity":1,"message":"55","line":172,"column":41,"nodeType":"56","endLine":172,"endColumn":77},{"ruleId":"54","severity":1,"message":"55","line":193,"column":41,"nodeType":"56","endLine":193,"endColumn":77},{"ruleId":"54","severity":1,"message":"55","line":214,"column":41,"nodeType":"56","endLine":214,"endColumn":77},{"ruleId":"54","severity":1,"message":"55","line":235,"column":41,"nodeType":"56","endLine":235,"endColumn":77},{"ruleId":"47","severity":1,"message":"48","line":266,"column":21,"nodeType":"49","endLine":266,"endColumn":31},{"ruleId":"50","severity":1,"message":"57","line":267,"column":42,"nodeType":"52","messageId":"53","endLine":267,"endColumn":44},{"ruleId":"47","severity":1,"message":"48","line":281,"column":13,"nodeType":"49","endLine":281,"endColumn":23},{"ruleId":"42","severity":1,"message":"58","line":295,"column":13,"nodeType":"44","messageId":"45","endLine":295,"endColumn":18},{"ruleId":"54","severity":1,"message":"55","line":322,"column":13,"nodeType":"56","endLine":322,"endColumn":93},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'ModalTitle' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","'index' is assigned a value but never used."]