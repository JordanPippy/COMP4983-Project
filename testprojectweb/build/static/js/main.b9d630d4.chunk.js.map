{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["dbPath","IconModal","props","console","warn","state","image","name","open","title","p","q","w","e","r","stats","shouldClose","fetched","this","fetch","then","response","json","res","setState","handleModalChange","Modal","contentClassName","dialogClassName","scrollable","isOpen","fade","toggle","onCloseModal","ModalHeader","className","ModalBody","src","HP","HPR","MP","MPR","MS","AD","attackSpeed","RNG","AR","MR","abilityFile","ability","abilityCooldown","abilityDescription","abilityMath","ModalFooter","Button","color","onClick","getTitle","getAbilities","getStats","React","Component","HomepageHandler","files","length","modalFile","modalName","showModal","handleClick","bind","file","substring","i","items","tempItems","name1","search","fileName","indexOf","push","Col","renderImage","Row","xs","md","Home","index","event","keyword","target","value","Container","fluid","type","placeholder","onChange","searchSpace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9d630d4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport { Button } from 'reactstrap';\nimport { Container, Row, Col, Modal, ModalTitle, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\n\n//THIS IS THE CONNECTION FOR THE DATABASE. IT NEEDS TO BE CHANGED WHEN USING ON A DIFFERENT COMPUTER\nconst dbPath = 'https://league-of-react.herokuapp.com';\n\n/*\n * IconModal: Handles the onClick functionality of all the characters on screen.\n *            It is responsible for querying the database to get all of the information about the \n *            clicked character, also for opening and closing itself.\n*/\nclass IconModal extends React.Component {\n    constructor(props) {\n        super(props);\n        console.warn(\"modal\");\n        this.state = {\n            image: this.props.image,\n            name: this.props.name,\n            open: this.props.open,\n            title: '',\n            p: null,\n            q: null,\n            w: null,\n            e: null,\n            r: null,\n            stats: null,\n            shouldClose: false,\n            fetched: false,\n        };\n    }\n\n    //Below are database queries, they fetch all of the needed data from the back-end.\n    getTitle() {\n        console.warn(\"db req name: \" + this.state.name);\n        fetch(dbPath + '/Title/' + this.state.name)\n          .then(response => response.json())\n          .then(res => {this.setState({\n              title: res[0].title,\n          })});\n    }\n\n    getAbilities() {\n        console.warn(\"db req abilities: \" + this.state.name);\n        fetch(dbPath + '/Ability/' + this.state.name)\n          .then(response => response.json())\n          .then(res => {this.setState({\n              p: res[1],\n              q: res[2],\n              w: res[4],\n              e: res[0],\n              r: res[3],\n          })});\n    }\n\n    getStats() {\n        console.warn(\"db req stats: \" + this.state.name);\n        fetch(dbPath + '/Stats/' + this.state.name)\n          .then(response => response.json())\n          .then(res => {this.setState({\n              stats: res[0],\n          })});\n    }\n    //End Database queries.\n\n    render() {\n        this.state.image = this.props.image;\n        this.state.name = this.props.name;\n        this.state.open = this.props.open;\n\n        //Since closing does a setState, it will re-render itself. That means that it \"should\" close.\n        //This if statement makes the modal null so that it is not sitting on loads of data.\n        if (this.state.shouldClose)\n        {\n            this.state.open = false;\n            this.state.shouldClose = false;\n            this.state.fetched = false;\n\n            this.state.title = '';\n            this.state.p = null;\n            this.state.q = null;\n            this.state.w = null;\n            this.state.e = null;\n            this.state.r = null;\n            this.state.stats = null;\n            this.props.handleModalChange();\n        }\n\n        //If modal is open, open the modal. *duh*\n        if (this.state.open)\n        {\n            console.warn(\"STATE IS OPEN\");\n            //Checking if we have all the data, else get all the data.\n            if (this.state.title != '' && this.state.q != null && this.state.stats != null)\n            {\n                //Renders the modal, I recommend you do NOT touch this part as it is a pain to get right.\n                return (\n                    <>\n                    <Modal contentClassName=\"customModal\" dialogClassName=\"customModal\" scrollable={true} isOpen={this.state.open} fade=\"false\"  toggle={() => this.setState({shouldClose: true})} onCloseModal={() => this.setState({shouldClose: true})}>\n                    <ModalHeader className=\"champModal champModalHeader\" toggle={() => this.setState({shouldClose: true})}>{this.state.name}<br/>{this.state.title}</ModalHeader>\n                        <ModalBody className=\"champModal champModalBody\">\n                            <table>\n                                <td>\n                                    <center><img src={this.state.image} className=\"modalIcon\"></img></center>\n                                </td>\n                                <td>\n                                    <tr>\n                                        <th>HP</th>\n                                        <th>HPR</th>\n                                        <th>MP</th>\n                                        <th>MPR</th>\n                                        <th>MS</th>\n                                        <th>AD</th>\n                                        <th>AS</th>\n                                        <th>RNG</th>\n                                        <th>AR</th>\n                                        <th>MR</th>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <p>{this.state.stats.HP}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.HPR}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.MP}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.MPR}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.MS}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.AD}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.attackSpeed}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.RNG}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.AR}</p>\n                                        </td>\n                                        <td>\n                                            <p>{this.state.stats.MR}</p>\n                                        </td>\n                                    </tr>\n                                </td>\n                            </table>\n\n\n                            <br/><br/>\n                            <table>\n                                <tr>\n                                    <td>\n                                        <h1>Passive</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.p.abilityFile}></img>\n                                        <p>{this.state.p.ability}</p>\n                                        <p>{this.state.p.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.p.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.p.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h1>Q</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.q.abilityFile}></img>\n                                        <p>{this.state.q.ability}</p>\n                                        <p>{this.state.q.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.q.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.q.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h1>W</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.w.abilityFile}></img>\n                                        <p>{this.state.w.ability}</p>\n                                        <p>{this.state.w.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.w.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.w.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h1>E</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.e.abilityFile}></img>\n                                        <p>{this.state.e.ability}</p>\n                                        <p>{this.state.e.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.e.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.e.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <h1>R</h1>\n                                    </td>\n                                    <td>\n                                        <img src={this.state.r.abilityFile}></img>\n                                        <p>{this.state.r.ability}</p>\n                                        <p>{this.state.r.abilityCooldown}</p>\n                                    </td>\n                                    <td>\n                                        <tr>\n                                            <td>\n                                                <p>{this.state.r.abilityDescription}</p>\n                                            </td>\n                                            <td>\n                                                <p>{this.state.r.abilityMath}</p>\n                                            </td>\n                                        </tr>\n                                    </td>\n                                </tr>\n\n                            </table>\n                        </ModalBody>\n                    <ModalFooter className=\"champModal champModalFooter\">\n\n                        <Button color=\"success\" onClick={() => this.setState({shouldClose: true})}>Close</Button>\n                    </ModalFooter>\n                    </Modal>\n                    </>\n                );\n            }\n            //Data was missing, lets fetch it.\n            else\n            {\n                //Small optimization here, will only fetch something once, and will not fetch things\n                //that are already fetched.\n                if (! this.state.fetched)\n                {\n                    this.state.fetched = true;\n                    if (this.state.title == '')\n                        this.getTitle();\n                    if (this.state.q == null)\n                        this.getAbilities();\n                    if (this.state.stats == null)\n                        this.getStats();\n                }\n                //Don't want to return anything if we are still gathering data. This will make the modal enter\n                //\"spin\" state. It will keep returning null untill we have the data.\n                return (\n                    null\n                );\n            }\n        }\n        //Modal is closed.\n        else\n        {\n            return (\n                null\n            );\n        }\n    }\n}\n\n/*\n * This handles all of the icons and the search-bar on the main page. \n * It gets rendered from the \"main\" class, but this is the big bad boss man.\n */\nclass HomepageHandler extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let files = this.props.files;\n        let index = 0;\n        let length = this.props.files.length;\n        this.state = {\n            files: files,\n            modalFile: null,\n            modalName: null,\n            showModal: false,\n            length: length,\n        };\n\n        //method bindings.. Whatever that means.\n        this.handleClick = this.handleClick.bind(this);\n        this.handleModalChange = this.handleModalChange.bind(this);\n    }\n    //This method is passed to IconModal, so it can tell us when it closed.\n    handleModalChange() {\n        this.setState({showModal: false});\n    }\n\n    //Gets the click information ready for the modal to open.\n    handleClick(file) {\n        this.setState({\n            modalFile: file,\n            modalName: file.substring(0, file.length - 6),\n            showModal: true,\n        });\n    }\n\n    //Embeds the image into an image tag.\n    renderImage(file) {\n        return (\n            <img src={file} className=\"homepageIcon\" onClick={() => this.handleClick(file)}></img>\n        );\n    }\n\n    //This gets all of the images and titles into a Row Col setup and renders it.\n    render() {\n        const items = [];\n        var tempItems = [];\n        var i;\n        for (i = 0; i < this.state.length; i++)\n        {\n            let name1 = this.props.search;\n            let name2 = this.state.files[i].fileName.substring(0, this.state.files[i].fileName.length - 6);\n            if (name2.indexOf(name1) >= 0) {\n                tempItems.push(\n                    <Col><center><h2>{this.state.files[i].fileName.substring(0, this.state.files[i].fileName.length - 6)}</h2>{this.renderImage(this.state.files[i].fileName)}</center></Col>\n                );\n            }\n        }\n        items.push(<Row xs={3} md={6}>{tempItems}</Row>);\n\n        //Little interesting thing here. The modal gets rendered whether or not it is open.\n        //The difference is, the modal will be null. This is a little different than rendering it \n        //if and only if we have data.\n        return (\n            <div>\n                <div>\n                    <IconModal image={this.state.modalFile}\n                               name={this.state.modalName}\n                               open={this.state.showModal}\n                               handleModalChange={this.handleModalChange}\n                    />\n                </div>\n\n                <div>\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\n//Official Main Class. (Unoffical does nothing class.)\nclass Home extends React.Component {\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            files: [],\n            index: 0,\n            search: '',\n        };\n    }\n\n    //fetch file paths from database on load.\n    componentDidMount() {\n        fetch(dbPath + '/fileNames')\n          .then(response => response.json())\n          .then(res => {\n              this.setState({files: res});\n          });\n    }\n\n    //handles updating the searchbar (pretty nifty ;))\n    searchSpace(event) {\n        let keyword = event.target.value;\n        this.setState({search: keyword});\n    }\n\n    render() {\n        if (!(this.state.files.length > 0))\n            return null;\n\n        //In all liklieness the first few times it renders, the HomepageHandler will be null.\n        //Thats because it is pulling quite a bit of data from the database. It will display it whenever it\n        //actually gets the data.\n        return (\n            <div>\n                <Container className=\"themed-container champ\" fluid={true}>\n                <div>\n                <center>\n                <input type=\"text\" placeholder=\"Enter item to be searched\" value={this.state.search} onChange={(e)=>this.searchSpace(e)} />\n                </center>\n                </div>\n                <div>\n                    <HomepageHandler files={this.state.files}\n                                     search={this.state.search}\n                    />\n                </div>\n                </Container>\n            </div>\n        );\n    }\n}\n\n//I guess React needs this line apparently. It probably does something.\nexport default Home;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}